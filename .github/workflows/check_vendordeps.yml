name: Check Dependencies

on:
  schedule:
    - cron: '0 12 */2 * *'  # Run at noon UTC every other day
  workflow_dispatch:  # Allow manual triggers

jobs:
  check-updates:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: pip install requests packaging

      - name: Check for updates
        id: check
        run: python .github/scripts/check_vendordeps.py
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Issue for Updates
        if: steps.check.outputs.has_updates == 'true'
        uses: actions/github-script@v6
        env:
          UPDATES_JSON: ${{ steps.check.outputs.updates }}
        with:
          script: |
            try {
              const updates = JSON.parse(process.env.UPDATES_JSON);
            
              let body = '# Dependency Updates Available\n\n';
            
              for (const update of updates) {
                body += `### ${update.name}\n`;
                body += `- Current version: ${update.current}\n`;
                body += `- Latest version: ${update.latest}\n`;
                body += `- Source: ${update.source}\n`;
            
                if (update.url) {
                  body += `- [View Release](${update.url})\n`;
                }
            
                if (update.name === 'WPILib') {
                  body += '\n‚ö†Ô∏è **Note**: Please use WPILib VS Code tools for actual updates\n';
                  if (update.notes) {
                    body += '\n<details><summary>Release Notes</summary>\n\n';
                    body += update.notes;
                    body += '\n</details>\n';
                  }
                }
            
                body += '\n';
              }
            
              await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: 'üîÑ Dependency Updates Available',
                body: body,
                labels: ['dependencies']
              });
            } catch (error) {
              core.setFailed(`Error processing updates: ${error.message}`);
              console.log('Full error:', error);
              console.log('Updates JSON:', process.env.UPDATES_JSON);
            }